(def t 't)

(def nil '())

(def deflam-maker (lam (name args body)
                       (cons 'def (cons name (cons (cons 'lam (cons args (cons body nil))) nil)))))

(macro deflam deflam-maker)

(deflam y (f) ((lam (x) (f (x x)))
                 (lam (x) (f (x x)))))

(deflam id (x) x)

(deflam list xs xs)

(deflam <= (x y) (if (eqc x y) 't (< x y)))

(def map
     (letrec (map (lam (f xs) (if xs (cons (f (cf xs)) (map f (cs xs))) ()))) map))

